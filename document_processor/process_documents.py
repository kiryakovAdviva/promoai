import os
import json
from typing import List, Dict, Any
from document_processor.chunker import SemanticDocumentChunker
from document_processor.document_parser import parse_document
from document_processor.metadata_extractor import extract_metadata

INPUT_DIR = "data/input"
OUTPUT_PATH = "data/output/processed_chunks.json"
EXCEL_CONTACTS = "data/input/Promo_Contact_information.xlsx"

def process_document(file_path: str) -> List[Dict[str, Any]]:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–¥–∏–Ω –¥–æ–∫—É–º–µ–Ω—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —á–∞–Ω–∫–æ–≤ —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏."""
    print(f"üìÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª: {os.path.basename(file_path)}")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —á–∞–Ω–∫–µ—Ä
    chunker = SemanticDocumentChunker(
        min_chunk_size=100,
        max_chunk_size=1000,
        overlap_size=100
    )
    
    # –ü–∞—Ä—Å–∏–º –¥–æ–∫—É–º–µ–Ω—Ç
    raw_content = parse_document(file_path)
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π –±–ª–æ–∫ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    all_chunks = []
    for block in raw_content:
        if block.type == 'text':
            # –†–∞–∑–±–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ —á–∞–Ω–∫–∏
            chunks = chunker.split_document(block.content)
            all_chunks.extend(chunks)
        elif block.type == 'table':
            # –î–ª—è —Ç–∞–±–ª–∏—Ü —Å–æ–∑–¥–∞–µ–º –æ–¥–∏–Ω —á–∞–Ω–∫ —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏
            table_text = '\n'.join([' | '.join(row) for row in block.content])
            chunks = chunker.split_document(table_text)
            for chunk in chunks:
                chunk['metadata']['chunk_type'] = 'table'
                chunk['metadata']['table_headers'] = block.source_info.get('headers', [])
            all_chunks.extend(chunks)
    
    return all_chunks

def extract_contacts_as_chunks(excel_path: str) -> List[Dict[str, Any]]:
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –∫–æ–Ω—Ç–∞–∫—Ç—ã –∏–∑ Excel –∏ —Å–æ–∑–¥–∞–µ—Ç –¥–ª—è –Ω–∏—Ö —á–∞–Ω–∫–∏."""
    # TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –∏–∑ Excel
    return []

def main():
    all_chunks = []

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã
    for filename in os.listdir(INPUT_DIR):
        if filename.endswith((".pdf", ".docx")):
            path = os.path.join(INPUT_DIR, filename)
            chunks = process_document(path)
            print(f"‚úÖ –ß–∞–Ω–∫–æ–≤: {len(chunks)}")
            all_chunks.extend(chunks)

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º Excel —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏
    if os.path.exists(EXCEL_CONTACTS):
        print("üë• –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º Excel —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏...")
        contact_chunks = extract_contacts_as_chunks(EXCEL_CONTACTS)
        print(f"‚ûï –î–æ–±–∞–≤–ª–µ–Ω–æ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã—Ö —á–∞–Ω–∫–æ–≤: {len(contact_chunks)}")
        all_chunks.extend(contact_chunks)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    with open(OUTPUT_PATH, "w", encoding="utf-8") as f:
        json.dump(all_chunks, f, ensure_ascii=False, indent=2)

    print(f"üíæ –ì–æ—Ç–æ–≤–æ. –í—Å–µ–≥–æ —á–∞–Ω–∫–æ–≤: {len(all_chunks)} ‚Üí {OUTPUT_PATH}")

if __name__ == "__main__":
    main()
